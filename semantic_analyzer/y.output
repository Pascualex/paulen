Nonterminals useless in grammar

   parametros_funcion
   resto_parametros_funcion


Terminals unused in grammar

   TOK_ERROR


Rules useless in grammar

   74 parametros_funcion: parametro_funcion resto_parametros_funcion
   75                   | %empty

   76 resto_parametros_funcion: TOK_PUNTOYCOMA parametro_funcion resto_parametros_funcion
   77                         | %empty


Grammar

    0 $accept: programa $end

    1 programa: TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones funciones sentencias TOK_LLAVEDERECHA

    2 declaraciones: declaracion
    3              | declaracion declaraciones

    4 declaracion: clase identificadores TOK_PUNTOYCOMA

    5 clase: clase_escalar
    6      | clase_vector

    7 clase_escalar: tipo

    8 tipo: TOK_INT
    9     | TOK_BOOLEAN

   10 clase_vector: TOK_ARRAY tipo TOK_CORCHETEIZQUIERDO TOK_CONSTANTE_ENTERA TOK_CORCHETEDERECHO

   11 identificadores: identificador
   12                | identificador TOK_COMA identificadores

   13 funciones: funcion funciones
   14          | %empty

   15 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR

   16 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametro_funcion TOK_PARENTESISDERECHO TOK_CORCHETEIZQUIERDO declaraciones_funcion

   17 funcion: fn_declaration sentencias TOK_CORCHETEDERECHO

   18 parametro_funcion: tipo idpf

   19 declaraciones_funcion: declaraciones
   20                      | %empty

   21 sentencias: sentencia
   22           | sentencia sentencias

   23 sentencia: sentencia_simple TOK_PUNTOYCOMA
   24          | bloque

   25 sentencia_simple: asignacion
   26                 | lectura
   27                 | escritura
   28                 | retorno_funcion

   29 bloque: condicional
   30       | bucle

   31 asignacion: TOK_IDENTIFICADOR TOK_ASIGNACION exp
   32           | elemento_vector TOK_ASIGNACION exp

   33 elemento_vector: TOK_IDENTIFICADOR TOK_CORCHETEIZQUIERDO exp TOK_CORCHETEDERECHO

   34 if_exp: TOK_IF TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO

   35 condicional: if_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA
   36            | if_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA TOK_ELSE TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

   37 while_exp: TOK_WHILE TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO

   38 bucle: while_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

   39 lectura: TOK_SCANF TOK_IDENTIFICADOR

   40 escritura: TOK_PRINTF exp

   41 retorno_funcion: TOK_RETURN exp

   42 exp: exp TOK_MAS exp
   43    | exp TOK_MENOS exp
   44    | exp TOK_DIVISION exp
   45    | exp TOK_ASTERISCO exp
   46    | TOK_MENOS exp
   47    | exp TOK_AND exp
   48    | exp TOK_OR exp
   49    | TOK_NOT exp
   50    | TOK_IDENTIFICADOR
   51    | constante
   52    | TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO
   53    | TOK_PARENTESISIZQUIERDO comparacion TOK_PARENTESISDERECHO
   54    | elemento_vector
   55    | idf_llamada_funcion TOK_PARENTESISIZQUIERDO lista_expresiones TOK_PARENTESISDERECHO

   56 idf_llamada_funcion: TOK_IDENTIFICADOR

   57 lista_expresiones: exp resto_lista_expresiones
   58                  | %empty

   59 resto_lista_expresiones: TOK_COMA exp resto_lista_expresiones
   60                        | %empty

   61 comparacion: exp TOK_IGUAL exp
   62            | exp TOK_DISTINTO exp
   63            | exp TOK_MENORIGUAL exp
   64            | exp TOK_MAYORIGUAL exp
   65            | exp TOK_MENOR exp
   66            | exp TOK_MAYOR exp

   67 constante: constante_logica
   68          | constante_entera

   69 constante_logica: TOK_TRUE
   70                 | TOK_FALSE

   71 constante_entera: TOK_CONSTANTE_ENTERA

   72 identificador: TOK_IDENTIFICADOR

   73 idpf: TOK_IDENTIFICADOR


Terminals, with rules where they appear

$end (0) 0
error (256)
TOK_MAIN (258) 1
TOK_INT (259) 8
TOK_BOOLEAN (260) 9
TOK_ARRAY (261) 10
TOK_FUNCTION (262) 15
TOK_IF (263) 34
TOK_ELSE (264) 36
TOK_WHILE (265) 37
TOK_SCANF (266) 39
TOK_PRINTF (267) 40
TOK_RETURN (268) 41
TOK_PUNTOYCOMA (269) 4 23
TOK_COMA (270) 12 59
TOK_PARENTESISIZQUIERDO (271) 16 34 37 52 53 55
TOK_PARENTESISDERECHO (272) 16 34 37 52 53 55
TOK_CORCHETEIZQUIERDO (273) 10 16 33
TOK_CORCHETEDERECHO (274) 10 17 33
TOK_LLAVEIZQUIERDA (275) 1 35 36 38
TOK_LLAVEDERECHA (276) 1 35 36 38
TOK_ASIGNACION (277) 31 32
TOK_MAS (278) 42
TOK_MENOS (279) 43 46
TOK_DIVISION (280) 44
TOK_ASTERISCO (281) 45
TOK_AND (282) 47
TOK_OR (283) 48
TOK_NOT (284) 49
TOK_IGUAL (285) 61
TOK_DISTINTO (286) 62
TOK_MENORIGUAL (287) 63
TOK_MAYORIGUAL (288) 64
TOK_MENOR (289) 65
TOK_MAYOR (290) 66
TOK_IDENTIFICADOR (291) 15 31 33 39 50 56 72 73
TOK_CONSTANTE_ENTERA (292) 10 71
TOK_TRUE (293) 69
TOK_FALSE (294) 70
TOK_ERROR (295)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
programa (42)
    on left: 1, on right: 0
declaraciones (43)
    on left: 2 3, on right: 1 3 19
declaracion (44)
    on left: 4, on right: 2 3
clase (45)
    on left: 5 6, on right: 4
clase_escalar (46)
    on left: 7, on right: 5
tipo (47)
    on left: 8 9, on right: 7 10 15 18
clase_vector (48)
    on left: 10, on right: 6
identificadores (49)
    on left: 11 12, on right: 4 12
funciones (50)
    on left: 13 14, on right: 1 13
fn_name (51)
    on left: 15, on right: 16
fn_declaration (52)
    on left: 16, on right: 17
funcion (53)
    on left: 17, on right: 13
parametro_funcion (54)
    on left: 18, on right: 16
declaraciones_funcion (55)
    on left: 19 20, on right: 16
sentencias (56)
    on left: 21 22, on right: 1 17 22 35 36 38
sentencia (57)
    on left: 23 24, on right: 21 22
sentencia_simple (58)
    on left: 25 26 27 28, on right: 23
bloque (59)
    on left: 29 30, on right: 24
asignacion (60)
    on left: 31 32, on right: 25
elemento_vector (61)
    on left: 33, on right: 32 54
if_exp (62)
    on left: 34, on right: 35 36
condicional (63)
    on left: 35 36, on right: 29
while_exp (64)
    on left: 37, on right: 38
bucle (65)
    on left: 38, on right: 30
lectura (66)
    on left: 39, on right: 26
escritura (67)
    on left: 40, on right: 27
retorno_funcion (68)
    on left: 41, on right: 28
exp (69)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55, on right: 31
    32 33 34 37 40 41 42 43 44 45 46 47 48 49 52 57 59 61 62 63 64
    65 66
idf_llamada_funcion (70)
    on left: 56, on right: 55
lista_expresiones (71)
    on left: 57 58, on right: 55
resto_lista_expresiones (72)
    on left: 59 60, on right: 57 59
comparacion (73)
    on left: 61 62 63 64 65 66, on right: 53
constante (74)
    on left: 67 68, on right: 51
constante_logica (75)
    on left: 69 70, on right: 67
constante_entera (76)
    on left: 71, on right: 68
identificador (77)
    on left: 72, on right: 11 12
idpf (78)
    on left: 73, on right: 18


State 0

    0 $accept: . programa $end

    TOK_MAIN  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: TOK_MAIN . TOK_LLAVEIZQUIERDA declaraciones funciones sentencias TOK_LLAVEDERECHA

    TOK_LLAVEIZQUIERDA  shift, and go to state 3


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 3

    1 programa: TOK_MAIN TOK_LLAVEIZQUIERDA . declaraciones funciones sentencias TOK_LLAVEDERECHA

    TOK_INT      shift, and go to state 5
    TOK_BOOLEAN  shift, and go to state 6
    TOK_ARRAY    shift, and go to state 7

    declaraciones  go to state 8
    declaracion    go to state 9
    clase          go to state 10
    clase_escalar  go to state 11
    tipo           go to state 12
    clase_vector   go to state 13


State 4

    0 $accept: programa $end .

    $default  accept


State 5

    8 tipo: TOK_INT .

    $default  reduce using rule 8 (tipo)


State 6

    9 tipo: TOK_BOOLEAN .

    $default  reduce using rule 9 (tipo)


State 7

   10 clase_vector: TOK_ARRAY . tipo TOK_CORCHETEIZQUIERDO TOK_CONSTANTE_ENTERA TOK_CORCHETEDERECHO

    TOK_INT      shift, and go to state 5
    TOK_BOOLEAN  shift, and go to state 6

    tipo  go to state 14


State 8

    1 programa: TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones . funciones sentencias TOK_LLAVEDERECHA

    TOK_FUNCTION  shift, and go to state 15

    $default  reduce using rule 14 (funciones)

    funciones       go to state 16
    fn_name         go to state 17
    fn_declaration  go to state 18
    funcion         go to state 19


State 9

    2 declaraciones: declaracion .
    3              | declaracion . declaraciones

    TOK_INT      shift, and go to state 5
    TOK_BOOLEAN  shift, and go to state 6
    TOK_ARRAY    shift, and go to state 7

    $default  reduce using rule 2 (declaraciones)

    declaraciones  go to state 20
    declaracion    go to state 9
    clase          go to state 10
    clase_escalar  go to state 11
    tipo           go to state 12
    clase_vector   go to state 13


State 10

    4 declaracion: clase . identificadores TOK_PUNTOYCOMA

    TOK_IDENTIFICADOR  shift, and go to state 21

    identificadores  go to state 22
    identificador    go to state 23


State 11

    5 clase: clase_escalar .

    $default  reduce using rule 5 (clase)


State 12

    7 clase_escalar: tipo .

    $default  reduce using rule 7 (clase_escalar)


State 13

    6 clase: clase_vector .

    $default  reduce using rule 6 (clase)


State 14

   10 clase_vector: TOK_ARRAY tipo . TOK_CORCHETEIZQUIERDO TOK_CONSTANTE_ENTERA TOK_CORCHETEDERECHO

    TOK_CORCHETEIZQUIERDO  shift, and go to state 24


State 15

   15 fn_name: TOK_FUNCTION . tipo TOK_IDENTIFICADOR

    TOK_INT      shift, and go to state 5
    TOK_BOOLEAN  shift, and go to state 6

    tipo  go to state 25


State 16

    1 programa: TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones funciones . sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 26
    TOK_WHILE          shift, and go to state 27
    TOK_SCANF          shift, and go to state 28
    TOK_PRINTF         shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_IDENTIFICADOR  shift, and go to state 31

    sentencias        go to state 32
    sentencia         go to state 33
    sentencia_simple  go to state 34
    bloque            go to state 35
    asignacion        go to state 36
    elemento_vector   go to state 37
    if_exp            go to state 38
    condicional       go to state 39
    while_exp         go to state 40
    bucle             go to state 41
    lectura           go to state 42
    escritura         go to state 43
    retorno_funcion   go to state 44


State 17

   16 fn_declaration: fn_name . TOK_PARENTESISIZQUIERDO parametro_funcion TOK_PARENTESISDERECHO TOK_CORCHETEIZQUIERDO declaraciones_funcion

    TOK_PARENTESISIZQUIERDO  shift, and go to state 45


State 18

   17 funcion: fn_declaration . sentencias TOK_CORCHETEDERECHO

    TOK_IF             shift, and go to state 26
    TOK_WHILE          shift, and go to state 27
    TOK_SCANF          shift, and go to state 28
    TOK_PRINTF         shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_IDENTIFICADOR  shift, and go to state 31

    sentencias        go to state 46
    sentencia         go to state 33
    sentencia_simple  go to state 34
    bloque            go to state 35
    asignacion        go to state 36
    elemento_vector   go to state 37
    if_exp            go to state 38
    condicional       go to state 39
    while_exp         go to state 40
    bucle             go to state 41
    lectura           go to state 42
    escritura         go to state 43
    retorno_funcion   go to state 44


State 19

   13 funciones: funcion . funciones

    TOK_FUNCTION  shift, and go to state 15

    $default  reduce using rule 14 (funciones)

    funciones       go to state 47
    fn_name         go to state 17
    fn_declaration  go to state 18
    funcion         go to state 19


State 20

    3 declaraciones: declaracion declaraciones .

    $default  reduce using rule 3 (declaraciones)


State 21

   72 identificador: TOK_IDENTIFICADOR .

    $default  reduce using rule 72 (identificador)


State 22

    4 declaracion: clase identificadores . TOK_PUNTOYCOMA

    TOK_PUNTOYCOMA  shift, and go to state 48


State 23

   11 identificadores: identificador .
   12                | identificador . TOK_COMA identificadores

    TOK_COMA  shift, and go to state 49

    $default  reduce using rule 11 (identificadores)


State 24

   10 clase_vector: TOK_ARRAY tipo TOK_CORCHETEIZQUIERDO . TOK_CONSTANTE_ENTERA TOK_CORCHETEDERECHO

    TOK_CONSTANTE_ENTERA  shift, and go to state 50


State 25

   15 fn_name: TOK_FUNCTION tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 51


State 26

   34 if_exp: TOK_IF . TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 52


State 27

   37 while_exp: TOK_WHILE . TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 53


State 28

   39 lectura: TOK_SCANF . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 54


State 29

   40 escritura: TOK_PRINTF . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 63
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 30

   41 retorno_funcion: TOK_RETURN . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 68
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 31

   31 asignacion: TOK_IDENTIFICADOR . TOK_ASIGNACION exp
   33 elemento_vector: TOK_IDENTIFICADOR . TOK_CORCHETEIZQUIERDO exp TOK_CORCHETEDERECHO

    TOK_CORCHETEIZQUIERDO  shift, and go to state 69
    TOK_ASIGNACION         shift, and go to state 70


State 32

    1 programa: TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones funciones sentencias . TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 71


State 33

   21 sentencias: sentencia .
   22           | sentencia . sentencias

    TOK_IF             shift, and go to state 26
    TOK_WHILE          shift, and go to state 27
    TOK_SCANF          shift, and go to state 28
    TOK_PRINTF         shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_IDENTIFICADOR  shift, and go to state 31

    $default  reduce using rule 21 (sentencias)

    sentencias        go to state 72
    sentencia         go to state 33
    sentencia_simple  go to state 34
    bloque            go to state 35
    asignacion        go to state 36
    elemento_vector   go to state 37
    if_exp            go to state 38
    condicional       go to state 39
    while_exp         go to state 40
    bucle             go to state 41
    lectura           go to state 42
    escritura         go to state 43
    retorno_funcion   go to state 44


State 34

   23 sentencia: sentencia_simple . TOK_PUNTOYCOMA

    TOK_PUNTOYCOMA  shift, and go to state 73


State 35

   24 sentencia: bloque .

    $default  reduce using rule 24 (sentencia)


State 36

   25 sentencia_simple: asignacion .

    $default  reduce using rule 25 (sentencia_simple)


State 37

   32 asignacion: elemento_vector . TOK_ASIGNACION exp

    TOK_ASIGNACION  shift, and go to state 74


State 38

   35 condicional: if_exp . TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA
   36            | if_exp . TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA TOK_ELSE TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

    TOK_LLAVEIZQUIERDA  shift, and go to state 75


State 39

   29 bloque: condicional .

    $default  reduce using rule 29 (bloque)


State 40

   38 bucle: while_exp . TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

    TOK_LLAVEIZQUIERDA  shift, and go to state 76


State 41

   30 bloque: bucle .

    $default  reduce using rule 30 (bloque)


State 42

   26 sentencia_simple: lectura .

    $default  reduce using rule 26 (sentencia_simple)


State 43

   27 sentencia_simple: escritura .

    $default  reduce using rule 27 (sentencia_simple)


State 44

   28 sentencia_simple: retorno_funcion .

    $default  reduce using rule 28 (sentencia_simple)


State 45

   16 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO . parametro_funcion TOK_PARENTESISDERECHO TOK_CORCHETEIZQUIERDO declaraciones_funcion

    TOK_INT      shift, and go to state 5
    TOK_BOOLEAN  shift, and go to state 6

    tipo               go to state 77
    parametro_funcion  go to state 78


State 46

   17 funcion: fn_declaration sentencias . TOK_CORCHETEDERECHO

    TOK_CORCHETEDERECHO  shift, and go to state 79


State 47

   13 funciones: funcion funciones .

    $default  reduce using rule 13 (funciones)


State 48

    4 declaracion: clase identificadores TOK_PUNTOYCOMA .

    $default  reduce using rule 4 (declaracion)


State 49

   12 identificadores: identificador TOK_COMA . identificadores

    TOK_IDENTIFICADOR  shift, and go to state 21

    identificadores  go to state 80
    identificador    go to state 23


State 50

   10 clase_vector: TOK_ARRAY tipo TOK_CORCHETEIZQUIERDO TOK_CONSTANTE_ENTERA . TOK_CORCHETEDERECHO

    TOK_CORCHETEDERECHO  shift, and go to state 81


State 51

   15 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR .

    $default  reduce using rule 15 (fn_name)


State 52

   34 if_exp: TOK_IF TOK_PARENTESISIZQUIERDO . exp TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 82
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 53

   37 while_exp: TOK_WHILE TOK_PARENTESISIZQUIERDO . exp TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 83
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 54

   39 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    $default  reduce using rule 39 (lectura)


State 55

   52 exp: TOK_PARENTESISIZQUIERDO . exp TOK_PARENTESISDERECHO
   53    | TOK_PARENTESISIZQUIERDO . comparacion TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 84
    idf_llamada_funcion  go to state 64
    comparacion          go to state 85
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 56

   46 exp: TOK_MENOS . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 86
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 57

   49 exp: TOK_NOT . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 87
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 58

   33 elemento_vector: TOK_IDENTIFICADOR . TOK_CORCHETEIZQUIERDO exp TOK_CORCHETEDERECHO
   50 exp: TOK_IDENTIFICADOR .
   56 idf_llamada_funcion: TOK_IDENTIFICADOR .

    TOK_CORCHETEIZQUIERDO  shift, and go to state 69

    TOK_PARENTESISIZQUIERDO  reduce using rule 56 (idf_llamada_funcion)
    $default                 reduce using rule 50 (exp)


State 59

   71 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 71 (constante_entera)


State 60

   69 constante_logica: TOK_TRUE .

    $default  reduce using rule 69 (constante_logica)


State 61

   70 constante_logica: TOK_FALSE .

    $default  reduce using rule 70 (constante_logica)


State 62

   54 exp: elemento_vector .

    $default  reduce using rule 54 (exp)


State 63

   40 escritura: TOK_PRINTF exp .
   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 40 (escritura)


State 64

   55 exp: idf_llamada_funcion . TOK_PARENTESISIZQUIERDO lista_expresiones TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 94


State 65

   51 exp: constante .

    $default  reduce using rule 51 (exp)


State 66

   67 constante: constante_logica .

    $default  reduce using rule 67 (constante)


State 67

   68 constante: constante_entera .

    $default  reduce using rule 68 (constante)


State 68

   41 retorno_funcion: TOK_RETURN exp .
   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 41 (retorno_funcion)


State 69

   33 elemento_vector: TOK_IDENTIFICADOR TOK_CORCHETEIZQUIERDO . exp TOK_CORCHETEDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 95
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 70

   31 asignacion: TOK_IDENTIFICADOR TOK_ASIGNACION . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 96
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 71

    1 programa: TOK_MAIN TOK_LLAVEIZQUIERDA declaraciones funciones sentencias TOK_LLAVEDERECHA .

    $default  reduce using rule 1 (programa)


State 72

   22 sentencias: sentencia sentencias .

    $default  reduce using rule 22 (sentencias)


State 73

   23 sentencia: sentencia_simple TOK_PUNTOYCOMA .

    $default  reduce using rule 23 (sentencia)


State 74

   32 asignacion: elemento_vector TOK_ASIGNACION . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 97
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 75

   35 condicional: if_exp TOK_LLAVEIZQUIERDA . sentencias TOK_LLAVEDERECHA
   36            | if_exp TOK_LLAVEIZQUIERDA . sentencias TOK_LLAVEDERECHA TOK_ELSE TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 26
    TOK_WHILE          shift, and go to state 27
    TOK_SCANF          shift, and go to state 28
    TOK_PRINTF         shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_IDENTIFICADOR  shift, and go to state 31

    sentencias        go to state 98
    sentencia         go to state 33
    sentencia_simple  go to state 34
    bloque            go to state 35
    asignacion        go to state 36
    elemento_vector   go to state 37
    if_exp            go to state 38
    condicional       go to state 39
    while_exp         go to state 40
    bucle             go to state 41
    lectura           go to state 42
    escritura         go to state 43
    retorno_funcion   go to state 44


State 76

   38 bucle: while_exp TOK_LLAVEIZQUIERDA . sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 26
    TOK_WHILE          shift, and go to state 27
    TOK_SCANF          shift, and go to state 28
    TOK_PRINTF         shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_IDENTIFICADOR  shift, and go to state 31

    sentencias        go to state 99
    sentencia         go to state 33
    sentencia_simple  go to state 34
    bloque            go to state 35
    asignacion        go to state 36
    elemento_vector   go to state 37
    if_exp            go to state 38
    condicional       go to state 39
    while_exp         go to state 40
    bucle             go to state 41
    lectura           go to state 42
    escritura         go to state 43
    retorno_funcion   go to state 44


State 77

   18 parametro_funcion: tipo . idpf

    TOK_IDENTIFICADOR  shift, and go to state 100

    idpf  go to state 101


State 78

   16 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametro_funcion . TOK_PARENTESISDERECHO TOK_CORCHETEIZQUIERDO declaraciones_funcion

    TOK_PARENTESISDERECHO  shift, and go to state 102


State 79

   17 funcion: fn_declaration sentencias TOK_CORCHETEDERECHO .

    $default  reduce using rule 17 (funcion)


State 80

   12 identificadores: identificador TOK_COMA identificadores .

    $default  reduce using rule 12 (identificadores)


State 81

   10 clase_vector: TOK_ARRAY tipo TOK_CORCHETEIZQUIERDO TOK_CONSTANTE_ENTERA TOK_CORCHETEDERECHO .

    $default  reduce using rule 10 (clase_vector)


State 82

   34 if_exp: TOK_IF TOK_PARENTESISIZQUIERDO exp . TOK_PARENTESISDERECHO
   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_PARENTESISDERECHO  shift, and go to state 103
    TOK_MAS                shift, and go to state 88
    TOK_MENOS              shift, and go to state 89
    TOK_DIVISION           shift, and go to state 90
    TOK_ASTERISCO          shift, and go to state 91
    TOK_AND                shift, and go to state 92
    TOK_OR                 shift, and go to state 93


State 83

   37 while_exp: TOK_WHILE TOK_PARENTESISIZQUIERDO exp . TOK_PARENTESISDERECHO
   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_PARENTESISDERECHO  shift, and go to state 104
    TOK_MAS                shift, and go to state 88
    TOK_MENOS              shift, and go to state 89
    TOK_DIVISION           shift, and go to state 90
    TOK_ASTERISCO          shift, and go to state 91
    TOK_AND                shift, and go to state 92
    TOK_OR                 shift, and go to state 93


State 84

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   52    | TOK_PARENTESISIZQUIERDO exp . TOK_PARENTESISDERECHO
   61 comparacion: exp . TOK_IGUAL exp
   62            | exp . TOK_DISTINTO exp
   63            | exp . TOK_MENORIGUAL exp
   64            | exp . TOK_MAYORIGUAL exp
   65            | exp . TOK_MENOR exp
   66            | exp . TOK_MAYOR exp

    TOK_PARENTESISDERECHO  shift, and go to state 105
    TOK_MAS                shift, and go to state 88
    TOK_MENOS              shift, and go to state 89
    TOK_DIVISION           shift, and go to state 90
    TOK_ASTERISCO          shift, and go to state 91
    TOK_AND                shift, and go to state 92
    TOK_OR                 shift, and go to state 93
    TOK_IGUAL              shift, and go to state 106
    TOK_DISTINTO           shift, and go to state 107
    TOK_MENORIGUAL         shift, and go to state 108
    TOK_MAYORIGUAL         shift, and go to state 109
    TOK_MENOR              shift, and go to state 110
    TOK_MAYOR              shift, and go to state 111


State 85

   53 exp: TOK_PARENTESISIZQUIERDO comparacion . TOK_PARENTESISDERECHO

    TOK_PARENTESISDERECHO  shift, and go to state 112


State 86

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   46    | TOK_MENOS exp .
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91

    $default  reduce using rule 46 (exp)


State 87

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   49    | TOK_NOT exp .

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91

    $default  reduce using rule 49 (exp)


State 88

   42 exp: exp TOK_MAS . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 113
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 89

   43 exp: exp TOK_MENOS . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 114
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 90

   44 exp: exp TOK_DIVISION . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 115
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 91

   45 exp: exp TOK_ASTERISCO . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 116
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 92

   47 exp: exp TOK_AND . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 117
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 93

   48 exp: exp TOK_OR . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 118
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 94

   55 exp: idf_llamada_funcion TOK_PARENTESISIZQUIERDO . lista_expresiones TOK_PARENTESISDERECHO

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    $default  reduce using rule 58 (lista_expresiones)

    elemento_vector      go to state 62
    exp                  go to state 119
    idf_llamada_funcion  go to state 64
    lista_expresiones    go to state 120
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 95

   33 elemento_vector: TOK_IDENTIFICADOR TOK_CORCHETEIZQUIERDO exp . TOK_CORCHETEDERECHO
   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_CORCHETEDERECHO  shift, and go to state 121
    TOK_MAS              shift, and go to state 88
    TOK_MENOS            shift, and go to state 89
    TOK_DIVISION         shift, and go to state 90
    TOK_ASTERISCO        shift, and go to state 91
    TOK_AND              shift, and go to state 92
    TOK_OR               shift, and go to state 93


State 96

   31 asignacion: TOK_IDENTIFICADOR TOK_ASIGNACION exp .
   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 31 (asignacion)


State 97

   32 asignacion: elemento_vector TOK_ASIGNACION exp .
   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 32 (asignacion)


State 98

   35 condicional: if_exp TOK_LLAVEIZQUIERDA sentencias . TOK_LLAVEDERECHA
   36            | if_exp TOK_LLAVEIZQUIERDA sentencias . TOK_LLAVEDERECHA TOK_ELSE TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 122


State 99

   38 bucle: while_exp TOK_LLAVEIZQUIERDA sentencias . TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 123


State 100

   73 idpf: TOK_IDENTIFICADOR .

    $default  reduce using rule 73 (idpf)


State 101

   18 parametro_funcion: tipo idpf .

    $default  reduce using rule 18 (parametro_funcion)


State 102

   16 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametro_funcion TOK_PARENTESISDERECHO . TOK_CORCHETEIZQUIERDO declaraciones_funcion

    TOK_CORCHETEIZQUIERDO  shift, and go to state 124


State 103

   34 if_exp: TOK_IF TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO .

    $default  reduce using rule 34 (if_exp)


State 104

   37 while_exp: TOK_WHILE TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO .

    $default  reduce using rule 37 (while_exp)


State 105

   52 exp: TOK_PARENTESISIZQUIERDO exp TOK_PARENTESISDERECHO .

    $default  reduce using rule 52 (exp)


State 106

   61 comparacion: exp TOK_IGUAL . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 125
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 107

   62 comparacion: exp TOK_DISTINTO . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 126
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 108

   63 comparacion: exp TOK_MENORIGUAL . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 127
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 109

   64 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 128
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 110

   65 comparacion: exp TOK_MENOR . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 129
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 111

   66 comparacion: exp TOK_MAYOR . exp

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 130
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 112

   53 exp: TOK_PARENTESISIZQUIERDO comparacion TOK_PARENTESISDERECHO .

    $default  reduce using rule 53 (exp)


State 113

   42 exp: exp . TOK_MAS exp
   42    | exp TOK_MAS exp .
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91

    $default  reduce using rule 42 (exp)


State 114

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   43    | exp TOK_MENOS exp .
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91

    $default  reduce using rule 43 (exp)


State 115

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   44    | exp TOK_DIVISION exp .
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    $default  reduce using rule 44 (exp)


State 116

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   45    | exp TOK_ASTERISCO exp .
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp

    $default  reduce using rule 45 (exp)


State 117

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   47    | exp TOK_AND exp .
   48    | exp . TOK_OR exp

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91

    $default  reduce using rule 47 (exp)


State 118

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   48    | exp TOK_OR exp .

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91

    $default  reduce using rule 48 (exp)


State 119

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   57 lista_expresiones: exp . resto_lista_expresiones

    TOK_COMA       shift, and go to state 131
    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 60 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 132


State 120

   55 exp: idf_llamada_funcion TOK_PARENTESISIZQUIERDO lista_expresiones . TOK_PARENTESISDERECHO

    TOK_PARENTESISDERECHO  shift, and go to state 133


State 121

   33 elemento_vector: TOK_IDENTIFICADOR TOK_CORCHETEIZQUIERDO exp TOK_CORCHETEDERECHO .

    $default  reduce using rule 33 (elemento_vector)


State 122

   35 condicional: if_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA .
   36            | if_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA . TOK_ELSE TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

    TOK_ELSE  shift, and go to state 134

    $default  reduce using rule 35 (condicional)


State 123

   38 bucle: while_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA .

    $default  reduce using rule 38 (bucle)


State 124

   16 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametro_funcion TOK_PARENTESISDERECHO TOK_CORCHETEIZQUIERDO . declaraciones_funcion

    TOK_INT      shift, and go to state 5
    TOK_BOOLEAN  shift, and go to state 6
    TOK_ARRAY    shift, and go to state 7

    $default  reduce using rule 20 (declaraciones_funcion)

    declaraciones          go to state 135
    declaracion            go to state 9
    clase                  go to state 10
    clase_escalar          go to state 11
    tipo                   go to state 12
    clase_vector           go to state 13
    declaraciones_funcion  go to state 136


State 125

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   61 comparacion: exp TOK_IGUAL exp .

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 61 (comparacion)


State 126

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   62 comparacion: exp TOK_DISTINTO exp .

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 62 (comparacion)


State 127

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   63 comparacion: exp TOK_MENORIGUAL exp .

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 63 (comparacion)


State 128

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   64 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 64 (comparacion)


State 129

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   65 comparacion: exp TOK_MENOR exp .

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 65 (comparacion)


State 130

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   66 comparacion: exp TOK_MAYOR exp .

    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 66 (comparacion)


State 131

   59 resto_lista_expresiones: TOK_COMA . exp resto_lista_expresiones

    TOK_PARENTESISIZQUIERDO  shift, and go to state 55
    TOK_MENOS                shift, and go to state 56
    TOK_NOT                  shift, and go to state 57
    TOK_IDENTIFICADOR        shift, and go to state 58
    TOK_CONSTANTE_ENTERA     shift, and go to state 59
    TOK_TRUE                 shift, and go to state 60
    TOK_FALSE                shift, and go to state 61

    elemento_vector      go to state 62
    exp                  go to state 137
    idf_llamada_funcion  go to state 64
    constante            go to state 65
    constante_logica     go to state 66
    constante_entera     go to state 67


State 132

   57 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce using rule 57 (lista_expresiones)


State 133

   55 exp: idf_llamada_funcion TOK_PARENTESISIZQUIERDO lista_expresiones TOK_PARENTESISDERECHO .

    $default  reduce using rule 55 (exp)


State 134

   36 condicional: if_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA TOK_ELSE . TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA

    TOK_LLAVEIZQUIERDA  shift, and go to state 138


State 135

   19 declaraciones_funcion: declaraciones .

    $default  reduce using rule 19 (declaraciones_funcion)


State 136

   16 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametro_funcion TOK_PARENTESISDERECHO TOK_CORCHETEIZQUIERDO declaraciones_funcion .

    $default  reduce using rule 16 (fn_declaration)


State 137

   42 exp: exp . TOK_MAS exp
   43    | exp . TOK_MENOS exp
   44    | exp . TOK_DIVISION exp
   45    | exp . TOK_ASTERISCO exp
   47    | exp . TOK_AND exp
   48    | exp . TOK_OR exp
   59 resto_lista_expresiones: TOK_COMA exp . resto_lista_expresiones

    TOK_COMA       shift, and go to state 131
    TOK_MAS        shift, and go to state 88
    TOK_MENOS      shift, and go to state 89
    TOK_DIVISION   shift, and go to state 90
    TOK_ASTERISCO  shift, and go to state 91
    TOK_AND        shift, and go to state 92
    TOK_OR         shift, and go to state 93

    $default  reduce using rule 60 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 139


State 138

   36 condicional: if_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA TOK_ELSE TOK_LLAVEIZQUIERDA . sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 26
    TOK_WHILE          shift, and go to state 27
    TOK_SCANF          shift, and go to state 28
    TOK_PRINTF         shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_IDENTIFICADOR  shift, and go to state 31

    sentencias        go to state 140
    sentencia         go to state 33
    sentencia_simple  go to state 34
    bloque            go to state 35
    asignacion        go to state 36
    elemento_vector   go to state 37
    if_exp            go to state 38
    condicional       go to state 39
    while_exp         go to state 40
    bucle             go to state 41
    lectura           go to state 42
    escritura         go to state 43
    retorno_funcion   go to state 44


State 139

   59 resto_lista_expresiones: TOK_COMA exp resto_lista_expresiones .

    $default  reduce using rule 59 (resto_lista_expresiones)


State 140

   36 condicional: if_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA TOK_ELSE TOK_LLAVEIZQUIERDA sentencias . TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 141


State 141

   36 condicional: if_exp TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA TOK_ELSE TOK_LLAVEIZQUIERDA sentencias TOK_LLAVEDERECHA .

    $default  reduce using rule 36 (condicional)
